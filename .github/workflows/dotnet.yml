name: Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore MyDotNetApp/MyDotNetApp.csproj

      - name: Build
        run: dotnet build --no-restore MyDotNetApp/MyDotNetApp.csproj

      - name: Test
        run: dotnet test --no-build --verbosity normal MyDotNetApp/MyDotNetApp.csproj

      - name: Set short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and Push .NET Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: jhhtaylor/demo-app
          tags: backend-${{ env.SHORT_SHA }}
          registry: docker.io
          dockerfile: MyDotNetApp/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  build-angular:
    runs-on: ubuntu-latest
    needs: build-dotnet
    steps:
      - uses: actions/checkout@v4

      - name: Set short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and Push Angular Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: jhhtaylor/demo-app
          tags: frontend-${{ env.SHORT_SHA }}
          registry: docker.io
          dockerfile: MyAngularApp/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
